import requests
import pandas as pd

url = 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/reverseGeocode'
params = {
    'f': 'json',
    'token': 'coloca aquí tu token',
    'langCode': 'es',
    'outSR': '4326'
}

df = pd.read_excel('X:/User/Desktop/automating_catalogs/cats.xlsx')

def get_admin_divisions(lat, lon):
    params['location'] = f'{lon},{lat}'
    response = requests.get(url, params=params)
    if response.status_code == 200:
        data = response.json()
        if len(data['address']['Match_addr']) > 0:
            address = data['address']
            return {
                'Distrito': address.get('District', ''),
                'Ciudad': address.get('Subregion', ''),
                'Región': address.get('Region', ''),
                'País': address.get('CountryCode', '')
            }
    return {}

# Nombres de las nuevas columnas
new_cols = ['Distrito', 'Ciudad', 'Región', 'País']

# Agregar las nuevas columnas al DataFrame
for col in new_cols:
    df[col] = ''

# Iterar sobre el DataFrame y obtener las divisiones administrativas para cada fila
for index, row in df.iterrows():
    lat = row['Latitud']
    lon = row['Longitud']
    admin_divisions = get_admin_divisions(lat, lon)
    for col, value in admin_divisions.items():
        df.at[index, col] = value

# Guardar el DataFrame actualizado en el mismo archivo Excel de entrada
df.to_excel('X:/User/Desktop/automating_catalogs/cats.xlsx', index=False)
